name: Deploy Frontend

on:
  push:
    branches: [main, master]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # ÏΩîÎìú Ï≤¥ÌÅ¨ÏïÑÏõÉ
      - name: Checkout
        uses: actions/checkout@v4

      # Node.js ÏÑ∏ÌåÖ
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      # Docker Hub Î°úÍ∑∏Ïù∏
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Ïù¥ÎØ∏ÏßÄ ÌÉúÍ∑∏ ÏÉùÏÑ± (GitHub Actions Ïã§Ìñâ Î≤àÌò∏ Í∏∞Î∞ò)
      - name: Set image tag
        id: meta
        run: echo "TAG=fe-${{ github.run_number }}" >> $GITHUB_OUTPUT

      # Docker Ïù¥ÎØ∏ÏßÄ ÎπåÎìú Î∞è Ìë∏Ïãú (Î≤ÑÏ†Ñ + latest ÎèôÏãú Ìë∏Ïãú)
      - name: Build and push image
        run: |
          docker build \
            --build-arg VITE_API_USER_URL=${{ secrets.VITE_API_USER_URL }} \
            --build-arg VITE_API_RECRUIT_URL=${{ secrets.VITE_API_RECRUIT_URL }} \
            --build-arg VITE_API_BOARD_URL=${{ secrets.VITE_API_BOARD_URL }} \
            --build-arg VITE_API_CHAT_URL=${{ secrets.VITE_API_CHAT_URL }} \
            --build-arg VITE_API_MEET_URL=${{ secrets.VITE_API_MEET_URL }} \
            --build-arg VITE_GOOGLE_CLIENT_ID=${{ secrets.VITE_GOOGLE_CLIENT_ID }} \
            --build-arg VITE_REDIRECT_URL=${{ secrets.VITE_REDIRECT_URL }} \
            --build-arg VITE_WS_MEET_URL=${{ secrets.VITE_WS_MEET_URL }} \
            --build-arg VITE_WEBSOCKET_CHAT_URL=${{ secrets.VITE_WEBSOCKET_CHAT_URL }} \
            -t seungjulee1228/contest-18-image-frontend:${{ steps.meta.outputs.TAG }} .

          docker push seungjulee1228/contest-18-image-frontend:${{ steps.meta.outputs.TAG }}

          # latest ÌÉúÍ∑∏Î°úÎèÑ push
          docker tag seungjulee1228/contest-18-image-frontend:${{ steps.meta.outputs.TAG }} seungjulee1228/contest-18-image-frontend:latest
          docker push seungjulee1228/contest-18-image-frontend:latest

      - name: Set Kubeconfig
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          if [ -n "$KUBE_CONFIG" ]; then
            mkdir -p ~/.kube
            echo "$KUBE_CONFIG" > ~/.kube/config
          else
            echo "‚ùå No KUBE_CONFIG secret found, skipping kubeconfig setup."
          fi

      - name: Rollout new image
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          if [ -n "$KUBE_CONFIG" ]; then
            echo "üöÄ Rolling out new image: fe-${{ github.run_number }}"
            kubectl -n frontend set image deployment/frontend-app-deployment \
              frontend-container=seungjulee1228/contest-18-image-frontend:${{ steps.meta.outputs.TAG }}
            
            kubectl -n frontend rollout status deployment/frontend-app-deployment
          else
            echo "‚ùå No KUBE_CONFIG secret found, skipping rollout."
          fi
